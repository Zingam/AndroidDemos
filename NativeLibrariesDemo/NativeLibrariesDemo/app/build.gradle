apply plugin: 'com.android.application'

android {
    compileSdkVersion 27



    defaultConfig {
        applicationId "com.roccoormm.nativelibrariesdemo"
        minSdkVersion 26
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            // Limiting to a smaller set of  ABIs to save time while testing:
            abiFilters = rootProject.ext.abiFilters
        }

        externalNativeBuild {
            cmake {
                // Passes optional arguments to CMake.
                arguments "-DANDROID_ARM_NEON=TRUE", // Build with NEON support
                        // Location on your host where CMake puts the LIBRARY target files when built.
                        "-DNativeLibraryArtifactsOutputDir:STRING=${rootProject.ext.nativeLibraryArtifactsOutputDirectory}",
                        "-DRootDir:STRING=${rootProject.rootDir}",
                        "-DExternalLibrariesRootDir:STRING=${rootProject.ext.externalLibrariesDirectory}"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            buildStagingDirectory = "${rootProject.ext.nativeStagingDirectory}/${project.name}"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // External libraries - the libraries will be build and added to the .apk
    implementation project(':nativesharedlibrary')
    implementation project(':nativestaticlibrary')
    implementation project(':externalsharedlibrary')
    implementation project(':externalstaticlibrary')
}
